Index: ../../02-backend/spring-boot-book-store/src/main/java/com/thebookstore/springbootbookstore/entity/Book.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.thebookstore.springbootbookstore.entity;public class Book {\n}\n
===================================================================
diff --git a/../../02-backend/spring-boot-book-store/src/main/java/com/thebookstore/springbootbookstore/entity/Book.java b/../../02-backend/spring-boot-book-store/src/main/java/com/thebookstore/springbootbookstore/entity/Book.java
--- a/../../02-backend/spring-boot-book-store/src/main/java/com/thebookstore/springbootbookstore/entity/Book.java	
+++ b/../../02-backend/spring-boot-book-store/src/main/java/com/thebookstore/springbootbookstore/entity/Book.java	
@@ -1,2 +1,29 @@
-package com.thebookstore.springbootbookstore.entity;public class Book {
+package com.thebookstore.springbootbookstore.entity;
+
+import jakarta.persistence.*;
+import lombok.Data;
+
+@Entity
+@Table(name = "book")
+@Data
+public class Book {
+    @Id
+    @GeneratedValue(strategy = GenerationType.IDENTITY)
+    @Column(name = "id")
+    private Long id;
+    @Column(name = "title")
+    private String title;
+    @Column(name = "author")
+    private String author;
+    @Column(name = "description")
+    private String description;
+    @Column(name = "copies")
+    private int copies;
+    @Column(name = "copiesAvailable")
+    private int copiesAvailable;
+    @Column(name = "category")
+    private String category;
+    @Column(name = "img")
+    private String img;
+
 }
Index: ../../02-backend/spring-boot-book-store/src/main/java/com/thebookstore/springbootbookstore/dao/BookRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.thebookstore.springbootbookstore.dao;public interface BookRepository {\n}\n
===================================================================
diff --git a/../../02-backend/spring-boot-book-store/src/main/java/com/thebookstore/springbootbookstore/dao/BookRepository.java b/../../02-backend/spring-boot-book-store/src/main/java/com/thebookstore/springbootbookstore/dao/BookRepository.java
--- a/../../02-backend/spring-boot-book-store/src/main/java/com/thebookstore/springbootbookstore/dao/BookRepository.java	
+++ b/../../02-backend/spring-boot-book-store/src/main/java/com/thebookstore/springbootbookstore/dao/BookRepository.java	
@@ -1,2 +1,7 @@
-package com.thebookstore.springbootbookstore.dao;public interface BookRepository {
+package com.thebookstore.springbootbookstore.dao;
+
+import com.thebookstore.springbootbookstore.entity.Book;
+import org.springframework.data.jpa.repository.JpaRepository;
+
+public interface BookRepository extends JpaRepository<Book, Long> {
 }
Index: ../../02-backend/spring-boot-book-store/src/main/java/com/thebookstore/springbootbookstore/config/MyDataRestConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.thebookstore.springbootbookstore.config;public class MyDataRestConfig {\n}\n
===================================================================
diff --git a/../../02-backend/spring-boot-book-store/src/main/java/com/thebookstore/springbootbookstore/config/MyDataRestConfig.java b/../../02-backend/spring-boot-book-store/src/main/java/com/thebookstore/springbootbookstore/config/MyDataRestConfig.java
--- a/../../02-backend/spring-boot-book-store/src/main/java/com/thebookstore/springbootbookstore/config/MyDataRestConfig.java	
+++ b/../../02-backend/spring-boot-book-store/src/main/java/com/thebookstore/springbootbookstore/config/MyDataRestConfig.java	
@@ -1,2 +1,36 @@
-package com.thebookstore.springbootbookstore.config;public class MyDataRestConfig {
+package com.thebookstore.springbootbookstore.config;
+
+import com.thebookstore.springbootbookstore.entity.Book;
+import org.springframework.context.annotation.Configuration;
+import org.springframework.data.rest.core.config.RepositoryRestConfiguration;
+import org.springframework.data.rest.webmvc.config.RepositoryRestConfigurer;
+import org.springframework.http.HttpMethod;
+import org.springframework.web.servlet.config.annotation.CorsRegistry;
+
+@Configuration
+public class MyDataRestConfig implements RepositoryRestConfigurer {
+    private String theAllowedOrigins = "http://localhost:8081";
+
+    @Override
+    public void configureRepositoryRestConfiguration(RepositoryRestConfiguration config, CorsRegistry cors){
+        HttpMethod[] theUnsupportedActions = {
+                HttpMethod.POST,
+                HttpMethod.PATCH,
+                HttpMethod.DELETE,
+                HttpMethod.PUT
+        };
+
+        config.exposeIdsFor(Book.class);
+
+        disableHttpMethods(Book.class, config, theUnsupportedActions);
+
+        /*Configure CORS Mapping*/
+        cors.addMapping(config.getBasePath() + "/**").allowedOrigins(theAllowedOrigins);
+    }
+
+    private void disableHttpMethods(Class theClass, RepositoryRestConfiguration config, HttpMethod[] theUnsupportedActions){
+        config.getExposureConfiguration()
+                .forDomainType(theClass)
+                .withItemExposure((metdata, httpMethods) -> httpMethods.disable(theUnsupportedActions)).withCollectionExposure((metdata, httpMethods) -> httpMethods.disable(theUnsupportedActions));
+    }
 }
